version = "2"

[linters]
  default = "all"

  disable = [
    "lll",           # Line length (manage via formatters instead)
    "dupl",          # Code duplication (high false positives)
    "funlen",        # Function length (managed by cognitive complexity checks)
    "nestif",        # Nested ifs (covered by gocritic)
    "wsl",           # Whitespace (handled by gofumpt)
    "gochecknoinits", # Init functions (sometimes necessary)
    "exhaustruct"    # Enforces to pass all fields to a structure
  ]

  [linters.settings]
    [linters.settings.gocritic]
      enabledTags = ["performance", "style", "experimental"]
      disabledLinters = ["hugeParam"]

    [linters.settings.gocyclo]
      min-complexity = 15  # Default 30, stricter cyclomatic complexity

    [linters.settings.gocognit]
      min-complexity = 15  # Default 30, stricter cognitive complexity

    [linters.settings.maligned]
      suggestNewOrder = true

    [linters.settings.prealloc]
      simple = true
      range-loops = true
      maps = true

    [linters.settings.errcheck]
      checkTypeAssertions = true
      checkAssignToBlank = true

    [linters.settings.depguard.rules.main]
    list-mode = "lax"
    allow = [
      "botex/pkg/logger",
      "botex/pkg/message",
      "go.mau.fi/whatsmeow/types"
    ]

    [linters.settings.revive]
    rules = [
      { name = "exported", disabled = true } # This enforces comments on exported functions
    ]

[formatters]
  enable = ["gofumpt", "goimports", "gci"]
  [formatters.settings.gci]
    sections = ["standard", "default", "prefix(github.com/your-project)"]

[issues]
  # Here 0 means unlimited
  max-issues-per-linter = 0
  max-same-issues = 0
  fix = true                 # Auto-fix where possible
  uniq-by-line = false       # Show all issues per line

[run]
  timeout = "5m"
  concurrency = 4
  tests = true
  modules-download-mode = "readonly"
  allow-parallel-runners = true

[severity]
  default = "error"  # Treat all findings as errors

[linters.exclusions]
  generated = "strict"  # Strictly ignore generated files
  warn-unused = true    # Warn about unused excludes

# Output configuration
[output]
  formatter = "colored-line-number"
  print-issued-lines = true
  print-linter-name = true
  sort-order = ["file"]
